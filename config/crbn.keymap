/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * link to ZMK keycodes index: https://zmkfirmware.dev/docs/codes/
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// define layers
#define DEFAULT 0
#define THAI	1
#define GAME	2
#define NAV		3
#define NUM		4
#define NUMPAD	5
#define EDIT	6
#define CONTROL	7
// define frequent key combinations
#define COPY	LC(C)
#define PASTE	LC(V)
#define CUT		LC(X)
#define UNDO	LC(Z)
#define REDO	LC(Y)
#define S_ALL	LC(A)
#define SAVE	LC(S)
#define PG_T	LC(HOME)
#define PG_B	LC(END)

#define PW		LC(LEFT)
#define D_PW	LC(BSPC)
#define NW		LC(RIGHT)
#define D_NW	LC(DEL)

// thai dict
#define TH_LPAR LS(Z)
#define TH_RPAR LS(X)
#define TH_DQT	LS(W)

&sk {
	release-after-ms = <165>;
};

/ {
	combos {
		compatible = "zmk,combos";

		// combo_esc {
		// 	timeout-ms = <80>;
		// 	key-positions = <2 3>;
		// 	bindings = <&kp ESC>;
		// };
        // combo_tab {
		// 	timeout-ms = <100>;
		// 	key-positions = <3 4>;
		// 	bindings = <&kp TAB>;
		// };
        // combo_ret {
        //     timeout-ms = <110>;
        //     key-positions = <2 3 4>;
        //     bindings = <&kp RET>;
        // };
		combo_shift {
            // timeout-ms = <65>;
            key-positions = <41 42>;
            bindings = <&sk LSHFT>;
			layers = < 0 >;
        };
		/* combo_thup { */
		/* 	timeout-ms = <75>; */
		/* 	key-positions = <41 42>; */
		/* 	bindings = <&sl THUP>; */
		/* 	layers = < 1 >; */
		/* }; */
	};

	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <190>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		hm1: homerow_mods1 {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <100>;
			flavor = "hold-preferred";
			bindings = <&kp>, <&kp>;
		};
		hm2: homerow_mods2 {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <250>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		cht: custom_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "Tap par_hold brc";
			#binding-cells = <2>;
			tapping_term_ms = <160>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		cht1: custom_hold_tap1 {
			compatible = "zmk,behavior-hold-tap";
			label = "Tap par_hold brc";
			#binding-cells = <2>;
			tapping_term_ms = <210>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
		};
		th: thai_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "taplyr1_holdlyr2";
			#binding-cells = <2>;
			tapping_term_ms = <170>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
		};
		thai: custom_thai_tog {
			compatible = "zmk,behavior-hold-tap";
			label = "Tap tog thai_Hold osinput";
			#binding-cells = <2>;
			tapping_term_ms = <190>;
			flavor = "balanced";
			bindings = <&kp>, <&tog>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

	// [0] DEFAULT = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
		default_layer {

				// ===================================================================================================================+
				// |  CAPS  |   Q    |   W   |    F   |    P   |    B    ||     J   |     L    |    U    |    Y    |    ; :  |   -    |
				// |ESC/HOME|   A    |   R   |    S   |    T   |    G    ||     M   |     N    |    E    |    I    |    O    | '/END  |
				// |    PW  |   Z    |   X,[ |   C,(  |   D {  |    V    ||     K   |    H }   |   , )   |    . ]  |    /    |   NW   |
				// |------------------------------------------------------------------------------------------------------------------|
		 		// |  D_PW  | tog NUM|  ____ | &thai |TAB/_EDIT|SPC/_NAV || BSPC/_NUM| RET/_CONTR|  DEL  |tog THAI | tog NAV |  D_NW  |
				// ===================================================================================================================+
			bindings = <
				&kp CAPS		&kp	Q		 &kp W 		  &kp F 		  		&kp P 	   	 &kp B  				&kp J		&kp L			 &kp U     		&kp Y    	 &cht COLON SEMI	&kp MINUS
				&cht1 HOME ESC  &hm2 LALT A  &hm LGUI R   &hm1 LSHFT S 			&hm LCTRL T  &kp G  				&kp M  		&hm LCTRL N 	 &hm1 LSHFT E   &hm2 LGUI I  &hm LALT O   		&cht1 END SQT
				&kp PW    		&kp Z		 &cht1 LBKT X  &cht1 LPAR C  		&cht1 LBRC D  &kp V  				&kp K      	&cht1 RBRC H		 &cht1 RPAR COMMA  &cht1 RBKT DOT &cht QMARK FSLH &kp NW
				&kp D_PW 		&tog NUM	 &trans  &thai LA(CAPS) THAI  &lt EDIT TAB &lt NAV SPACE			&lt NUM BSPC &lt CONTROL RET &kp DEL  &trans  &tog NAV 			&kp D_NW
			>;
		};

	// [1] THAI = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	thai {
				// ===================================================================================================================+
				// |  CAPS  |  ข/ฤ   |  บ/ๆ   |   ด/ธ  |   ท/ษ  |   จ/ฮ  ||    ิ/ฎ  |   ั/ฐ    |   ย/ภ   |   ี/ฏ   |   ็/ ๊  |   ์/ฬ  |
				// |   ESC  |  ม/ผ   |  ก/พ  |   ง/ช  |   น/ถ  |   ส/ึ   ||   ้/โ   |   ่ / ุ   |   า/ ู   |   ร/ใ   |   ว/ ำ  |   ไ/ฆ  |
				// |    PW  |  ป/ฟ   |  ต/ฒ  |   ค/ศ  |   ล/ญ  |   ห/ฉ  ||   ะ/ฝ   |  เ / ณ   |   อ/ซ   |   ื /ฑ |    แ/ ๋  |   NW   |
				// |------------------------------------------------------------------------------------------------------------------|
		 		// |  D_PW  | tog NUM|  ____ | &thai |TAB/_EDIT|SPC/_NAV || BSPC/_NUM| RET/_CONTR|  DEL  |tog THAI | tog NAV |  D_NW  |
				// ===================================================================================================================+
			bindings = <
				&kp CAPS        &th MINUS LS(A)	&th LBKT Q	    &th F LS(T)	        &th M LS(K)	    &th N0 LS(V)		        &th B LS(E)	    &th Y LS(LBKT)	&th P N4	    &th U LS(D)	&th LS(H) LS(U)	&th LS(N) LS(DOT)
				&cht1 HOME ESC	&th COMMA Z	&th D R	            &th SQT EQUAL	    &th O N5	    &th L N7		            &th H LS(F)	    &th J N6	    &th K LS(6)	    &th I DOT	&th SEMI E	    &th W LS(S)
				&kp PW	        &th X A	    &th N9 LS(COMMA)	&th N8 LS(L)	    &th RBKT LS(P)	&th S LS(C)		            &th T FSLH	    &th G LS(I)	    &th V LS(SEMI)	&th N LS(R)	&th C LS(J)	    &kp NW
				&kp D_PW 		&tog NUM	&trans	            &thai LA(CAPS) THAI &lt EDIT TAB 	&lt NAV SPACE				&lt NUMPAD BSPC &lt CONTROL RET &kp DEL         &trans 	    &tog NAV 	    &kp D_NW

			>;
	};


	// [2] GAME  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	game {
			bindings = <
				&kp TAB	  &kp Q &kp W &kp F &kp P &kp B  				&kp J   &kp L  &kp U  &kp Y  &kp SEMI	&kp MINUS
				&kp ESC   &kp A &kp R &kp S &kp T &kp G  				&kp M  	&kp N  &kp E  &kp I  &kp O		&kp SQT
				&kp LSHFT &kp Z &kp X &kp C &kp D &kp V  				&kp K   &kp H  &kp COMMA &kp DOT  &kp FSLH &kp RPAR
				&kp LCTRL &kp N1 &kp N2 &kp LGUI &kp LALT  &kp SPACE 	&lt NAV RET  &lt CONTROL BSPC &kp DEL   &tog THAI &kp LC(RIGHT) &kp D_NW
			>;
	};

	// [3] NAVIGATION = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
    nav {
			// ---------------------------------------------------------------------------------------------------+
			// |  ____ |  SAVE  |  APP  |  DEL  |  RET  |  PG_T || PG_UP |  ____ |  ____ |  ____ |  ____ |  ____  |
			// |RENAM/HOME|S_ALL|  CUT  |  COPY | PASTE |  PG_B || PG_DN |  LEFT |  DOWN |   UP  | RIGHT |  ____  |
			// |  ____ |  UNDO  |  REDO |  ____ |  K_APP|  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// |--------------------------------------------------------------------------------------------------|
			// |  ____ |  ____  |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ===================================================================================================+
			bindings = <
				&trans		 &kp SAVE	&kp K_APP 	 &kp DEL 			&kp RET  		&kp PG_T					&kp PG_UP	&trans	 &trans		&trans	&trans		&trans
				&cht HOME F2 &hm LALT S_ALL	&hm LGUI CUT &hm1 LSHFT COPY	&hm LCTRL PASTE	&kp PG_B					&kp PG_DN	&kp LEFT &kp DOWN	&kp UP	&kp RIGHT	&trans
				&trans 		 &kp UNDO	&kp REDO  	 &trans				&kp K_APP		&trans						&trans		&trans	 &trans		&trans	&trans		&trans
				&kp D_PW 	&tog NUM	 &trans  &thai LA(CAPS) THAI  &lt EDIT TAB &lt NAV SPACE			&lt NUM BSPC &lt CONTROL RET &kp DEL  &trans  &tog NAV 			&kp D_NW
    		>;
    };

	// [4] NUMSYM = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
    numsym {
			// --------------------------------------------------------------------------------------------------+
			// |  ____ |   %   |   1   |   2   |   3   |   ^   ||   $   |   #   |   @   |   !   |   :   |   UND  |
			// |   ~   |   0   |   4   |   5   |   6   |   .   ||   *   |   =   |   -   |   +   |   &   |    |   |
			// |  ____ |   :   |   7   |  8(   |   9   |   ,   ||   \   |   `   |   <)  |   >   |   ?   |  ____  |
			// |-------------------------------------------------------------------------------------------------|
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ==================================================================================================+
			bindings = <
				&trans    &kp PRCNT	   &kp N1  &kp N2	 &kp N3  &kp CARET							&kp DLLR	&kp HASH	&kp AT		&kp EXCL	&kp COLON	&kp UNDER
				&kp TILDE &kp N0	   &kp N4  &kp N5	 &hm LCTRL N6 &kp DOT	     				&kp STAR	&hm LCTRL EQUAL	&hm LSHFT KP_MINUS	&hm LGUI KP_PLUS &hm LALT AMPS	&kp PIPE
				&trans    &kp COLON &kp N7  &cht LPAR N8 &kp N9	&kp COMMA     						&kp BSLH	&kp GRAVE	&cht RPAR LT		&kp GT	&kp QMARK	&trans
				&trans &trans 	&trans 	 &trans	&trans	&trans 										&trans 	&trans 	&trans 	&trans 	&trans 	&trans
			>;
    }; 

	// [5] NUMPAD = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
    numpad {
			// --------------------------------------------------------------------------------------------------+
			// |  ____ |   %   |   1   |   2   |   3   |   ^   ||   $   |   #   |   @   |   !   |   :   |   UND  |
			// |   ~   |   0   |   4   |   5   |   6   |   .   ||   *   |   =   |   -   |   +   |   &   |    |   |
			// |  ____ |   :   |   7   |  8(   |   9   |   ,   ||   \   |   `   |   <)  |   >   |   ?   |  ____  |
			// |-------------------------------------------------------------------------------------------------|
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ==================================================================================================+
			bindings = <
				&trans    &kp PRCNT	   &kp KP_N1  &kp KP_N2	 &kp KP_N3  &kp CARET							&kp DLLR	&kp HASH	&kp AT		&kp EXCL	&kp COLON	&kp UNDER
				&kp TILDE &kp KP_N0	   &kp KP_N4  &kp KP_N5	 &hm LCTRL KP_N6 &kp DOT	     				&kp STAR	&hm LCTRL EQUAL	&hm LSHFT KP_MINUS	&hm LGUI KP_PLUS &hm LALT AMPS	&kp PIPE
				&trans    &kp COLON &kp KP_N7  &cht LPAR KP_N8 &kp KP_N9	&kp COMMA     					&kp BSLH	&kp GRAVE	&cht RPAR LT	&kp GT	&kp QMARK	&trans
				&trans &trans 	&trans 	 &trans	&trans	&trans 												&trans 	&trans 	&trans 	&trans 	&trans 	&trans
			>;
    }; 

	// [6] EDIT = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	edit {
			// --------------------------------------------------------------------------------------------------+
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |   F1  |  F2   |   F3  |  F10  |  ____  |
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |   F4  |  F5   |   F6  |  F11  |  ____  |
			// |  ____ |  SAVE |  BOLD |  ITAL |  UNDL |  ____ ||  ____ |   F7  |  F8   |   F9  |  F12  |  ____  |
			// |-------------------------------------------------------------------------------------------------|
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ==================================================================================================+			
			bindings = <
				&trans	&trans		&trans		&trans		&trans		&trans						&trans	&kp F1	&kp F2	&kp F3	&kp F10	&trans
				&trans	&trans		&trans		&trans		&trans		&trans						&trans	&kp F4	&kp F5	&kp F6	&kp F11	&trans
				&trans	&kp SAVE	&kp LC(B)	&kp LC(I)	&kp LC(U)	&trans						&trans	&kp F7	&kp F8	&kp F9	&kp F12	&trans
				&trans	&trans		&trans		&trans		&trans		&trans						&trans	&trans	&trans	&trans	&trans	&trans

			>;
	};

	// [7] CONTROL = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	control {
			// ----------------------------------------------------------------------------------------+
			// |BOOTLD| ____ | prof1| prof2| prof3| ____ || ____ | B_TOG | B_DN  | B_UP  | ____ |ZOOMIN|
			// |RESET | ____ | prof4| prof5| ____ | ____ || ____ | v_MUTE| V_DN  | v_UP  | ____ |ZOOMOUT|
			// |BT_CLR| ____ | ____ | ____ | ____ | ____ || ____ | M_STOP| M_PRV | M_NXT | M_PP | ____ |
			// |---------------------------------------------------------------------------------------|
			// | ____ | ____ | ____ | ____ | ____ | ____ || ____ | _____ | _____ | _____ | ____ | tog 4|
			// ========================================================================================+	
		bindings = <
			&bootloader &trans 	&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans		&trans &kp C_BKLT_TOG	&kp C_BRI_DN	&kp C_BRI_UP	&trans 		&kp LC(PLUS)
			&reset 	&to DEFAULT &bt BT_SEL 3 &bt BT_SEL 4 &trans 	   &trans 		&trans &kp C_MUTE		&kp C_VOL_DN	&kp C_VOL_UP	&trans 		&kp LC(MINUS)
			&bt BT_CLR	&trans 	&trans 		 &trans 	  &trans 	   &trans 		&trans &kp C_STOP		&kp C_PREV		&kp C_NEXT		&kp C_PP 	&trans
			&trans 		&trans 	&trans 		 &trans 	  &trans       &trans 		&trans &trans &trans &trans &trans &tog GAME
		>; 
	};

  };
};

/*
TODO:
	- move bluetooth to a separate layer (avoid wrong press from frequent layer switching)
	- move F-keys to _CONTR layer on left hand
	- add OSinput switch for Linux
	- assign sticky key for bluetooth and OSinput/lang switch on bottom row
	- move S_ALL and UNDO keys
*/
