/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * link to ZMK keycodes index: https://zmkfirmware.dev/docs/codes/
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// define layers
#define DEFAULT 0
#define THAI	1
#define GAME	2
#define NAV		3
#define NUM		4
#define NUMPAD	5
#define WM		6
#define MEDIA	7
#define CONTROL	8
// define frequent key combinations
#define COPY	LC(C)
#define PASTE	LC(V)
#define CUT		LC(X)
#define UNDO	LC(Z)
#define REDO	LC(Y)
#define S_ALL	LC(A)
#define SAVE	LC(S)
#define PG_T	LC(HOME)
#define PG_B	LC(END)

#define PW		LC(LEFT)
#define D_PW	LC(BSPC)
#define NW		LC(RIGHT)
#define D_NW	LC(DEL)

// thai dict
#define TH_LPAR LS(Z)
#define TH_RPAR LS(X)
#define TH_DQT	LS(W)

// Window Manager Shortcuts
#define WS_1	LG(N1)
#define WS_2	LG(N2)
#define WS_3	LG(N3)
#define WS_4	LG(N4)
#define WS_5	LG(N5)
#define WS_6	LG(N6)

/ {
	combos {
		#include "combos.dtsi" 
		/* compatible = "zmk,combos"; */
		combo_shift {
			key-positions = <41 42>;
			bindings = <&sk LSHFT>;
			layers = < 0 >;
      	};
		/* thai_tog { */
		/* 	key-positions = <31 32>; */
		/* 	bindings = < &macro_lang >; */
		/* 	layers = < DEFAULT THAI >; */
		/* }; */
	};

	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <190>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		hm1: homerow_mods1 {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <100>;
			flavor = "hold-preferred";
			bindings = <&kp>, <&kp>;
		};
		hm2: homerow_mods2 {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <250>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		cht: custom_hold_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "Tap par_hold brc";
			#binding-cells = <2>;
			tapping_term_ms = <150>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		cht1: custom_hold_tap1 {
			compatible = "zmk,behavior-hold-tap";
			label = "Tap par_hold brc";
			#binding-cells = <2>;
			tapping_term_ms = <210>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
		};
		thai: custom_thai_tog {
			compatible = "zmk,behavior-hold-tap";
			label = "Tap tog thai_Hold osinput";
			#binding-cells = <2>;
			tapping_term_ms = <190>;
			flavor = "balanced";
			bindings = <&kp>, <&tog>;
		};
		// Mod-morph
		dot_excl: dot_excl {
		  compatible = "zmk,behavior-mod-morph";
		  label = "dot_excl";
		  #binding-cells = <0>;
		  bindings = <&kp DOT>, <&kp EXCL>;
		  mods = <(MOD_LSFT|MOD_RSFT)>;
		};

		com_qmark: com_qmark {
		  compatible = "zmk,behavior-mod-morph";
		  label = "com_qmark";
		  #binding-cells = <0>;
		  bindings = <&kp COMMA>, <&kp QMARK>;
		  mods = <(MOD_LSFT|MOD_RSFT)>;
		};

		slash_at: slash_at {
		  compatible = "zmk,behavior-mod-morph";
		  label = "slash_at";
		  #binding-cells = <0>;
		  bindings = <&kp SLASH>, <&kp AT>;
		  mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		// Macros
		macro_lang: macro_lang {
			compatible = "zmk,behavior-macro";
			label = "macro_lang";
			#binding-cells = <0>;
			bindings = <&kp RA(SPACE)>, <&tog THAI>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

	// [0] DEFAULT = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
		default_layer {

				// ===================================================================================================================+
				// |  CAPS  |   Q    |   W   |    F   |    P   |    B    ||     J   |     L    |    U    |    Y    |    ; :  |   -    |
				// |ESC/HOME|   A    |   R   |    S   |    T   |    G    ||     M   |     N    |    E    |    I    |    O    | '/END  |
				// |    PW  |   Z    |   X,[ |   C,(  |   D {  |    V    ||     K   |    H }   |   , )   |    . ]  |    /    |   NW   |
				// |------------------------------------------------------------------------------------------------------------------|
		 		// |  D_PW  | tog NUM|  ____ | &thai |TAB/_WM  |SPC/_NAV || BSPC/_NUM| RET/_CONTR|  DEL  |tog THAI | tog NAV |  D_NW  |
				// ===================================================================================================================+
			bindings = <
				&kp CAPS		&kp	Q		 &kp W 		  &kp F 		  		&kp P 	   	 &kp B  				&kp J		&kp L			 &kp U     		&kp Y    	 &cht COLON SEMI	&kp MINUS
				&cht1 HOME ESC  &hm2 LALT A  &hm LGUI R   &hm1 LSHFT S 			&hm LCTRL T  &kp G  				&kp M  		&hm LCTRL N 	 &hm1 LSHFT E   &hm2 LGUI I  &hm LALT O   		&cht1 END SQT
				&kp PW    		&kp Z		 &cht1 LBKT X  &cht1 LPAR C  		&cht1 LBRC D  &kp V  				&kp K      	&cht1 RBRC H		 &cht1 RPAR COMMA  &cht1 RBKT DOT &cht QMARK FSLH &kp NW
				&kp D_PW 		&tog NUM	 &trans  &thai RA(SPACE) THAI  &lt WM TAB &lt NAV SPACE			&lt NUM BSPC &lt MEDIA RET &kp DEL  &mo CONTROL &tog NAV 			&kp D_NW
			>;
		};

	// [1] THAI = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	thai {
				// ===================================================================================================================+
				// |  CAPS  |  ข/ฤ   |  ป/ๆ   |   ด/ธ  |   ท/ษ  |   จ/ฮ  ||    ิ/ฎ  |   ั/ฐ    |   ย/ภ   |   ี/ฏ   |   ็/ ๊  |   ์/ฬ  |
				// |   ESC  |  ม/ผ   |  ง/พ  |   ก/ช  |   น/ถ  |   ส/ึ   ||   ้/โ   |   ่ / ุ   |   า/ ู   |   ร/ใ   |   ว/ ำ  |   ไ/ฆ  |
				// |    PW  |  บ/ฟ   |  ต/ฒ  |   ค/ศ  |   ล/ญ  |   ห/ฉ  ||   ะ/ฝ   |  เ / ณ   |   อ/ซ   |   ื /ฑ |    แ/ ๋  |   NW   |
				// |------------------------------------------------------------------------------------------------------------------|
		 		// |  D_PW  | tog NUM|  ____ | &thai |TAB/_WM  |SPC/_NAV || BSPC/_NUM| RET/_CONTR|  DEL  |tog THAI | tog NAV |  D_NW  |
				// ===================================================================================================================+
			bindings = <
				&kp EQUAL	   &cht LS(A) MINUS &cht Q X          &cht LS(T) M   &cht LS(K) F    &cht LS(V) N0       &cht LS(E) B    &cht LS(LBKT) Y &cht N4 P       &cht LS(D) U &cht LS(U) LS(H) &cht1 LS(DOT) LS(N)
				&cht1 HOME ESC &cht Z COMMA     &cht R SQT        &cht EQUAL D   &cht N5 O       &cht N7 L           &cht LS(F) H    &cht N6 J       &cht LS(N6) K   &cht E I     &cht DOT SEMI    &cht LS(S) W 
				&kp PW         &cht A LBKT      &cht LS(COMMA) N9 &cht LS(L) N8  &cht LS(P) RBKT &cht LS(C) S		 &cht FSLH T     &cht LS(I) G    &cht LS(SEMI) V &cht LS(R) N &cht LS(J) C     &kp NW
				&kp D_PW 	   &tog NUM	        &trans	    &thai LS(CAPS) THAI  &lt WM TAB      &lt NAV SPACE	     &lt NUMPAD BSPC &lt MEDIA RET &kp DEL         &mo CONTROL &tog NAV      &kp D_NW
			>;
	};

	// [2] GAME  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	game {
			bindings = <
				&kp TAB	  &kp Q &kp W &kp F &kp P &kp B  				&kp J   &kp L  &kp U  &kp Y  &kp SEMI	&kp MINUS
				&kp ESC   &kp A &kp R &kp S &kp T &kp G  				&kp M  	&kp N  &kp E  &kp I  &kp O		&kp SQT
				&kp LSHFT &kp Z &kp X &kp C &kp D &kp V  				&kp K   &kp H  &kp COMMA &kp DOT  &kp FSLH &kp RPAR
				&kp LCTRL &kp N1 &kp N2 &kp LGUI &kp LALT  &kp SPACE 	&lt NAV RET  &lt CONTROL BSPC &kp DEL   &tog THAI &kp LC(RIGHT) &kp D_NW
			>;
	};

	// [3] NAVIGATION = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
    nav {
			// ---------------------------------------------------------------------------------------------------+
			// |  ____ |  SAVE  | BSPC  |  DEL  |  RET  |  PG_T || PG_UP |  ____ |  ____ |  ____ |  ____ |  ____  |
			// |RENAM/HOME|S_ALL|  CUT  |  COPY | PASTE |  PG_B || PG_DN |  LEFT |  DOWN |   UP  | RIGHT |  ____  |
			// |  ____ |  UNDO  |  REDO |  ____ |  K_APP|  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// |--------------------------------------------------------------------------------------------------|
			// |  ____ |  ____  |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ===================================================================================================+
			bindings = <
				&trans		 &kp SAVE	&kp BSPC  	 &kp DEL 			&kp RET  		&kp PG_T					&kp PG_UP	&trans	 &trans		&trans	&trans		&trans
				&cht HOME F2 &hm LALT S_ALL	&hm LGUI CUT &hm1 LSHFT COPY	&hm LCTRL PASTE	&kp PG_B					&kp PG_DN	&kp LEFT &kp DOWN	&kp UP	&kp RIGHT	&trans
				&trans 		 &kp UNDO	&kp REDO  	 &trans				&kp K_APP		&trans						&trans		&trans	 &trans		&trans	&trans		&trans
				&kp D_PW 		&tog NUM	 &trans  &thai LS(CAPS) THAI  &lt WM TAB &lt NAV SPACE			&lt NUM BSPC &lt MEDIA RET &kp DEL  &mo CONTROL &tog NAV 			&kp D_NW
    		>;
    };

	// [4] NUMSYM = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
    numsym {
			// --------------------------------------------------------------------------------------------------+
			// |  ____ |   %   |   1   |   2   |   3   |   ^   ||   $   |   #   |   @   |   !   |   :   |   UND  |
			// |   ~   |   0   |   4   |   5   |   6   |   .   ||   *   |   =   |   -   |   +   |   &   |    |   |
			// |  ____ |   :   |   7   |  8(   |   9   |   ,   ||   \   |   `   |   <)  |   >   |   ?   |  ____  |
			// |-------------------------------------------------------------------------------------------------|
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ==================================================================================================+
			bindings = <
				&trans    &kp PRCNT	   &kp N1  &kp N2	 &kp N3  &kp CARET							&kp DLLR	&kp HASH	&kp AT		&kp EXCL	&kp COLON	&kp UNDER
				&kp TILDE &kp N0	   &kp N4  &kp N5	 &hm LCTRL N6 &kp DOT	     				&kp STAR	&hm LCTRL EQUAL	&hm LSHFT KP_MINUS	&hm LGUI KP_PLUS &hm LALT AMPS	&kp PIPE
				&trans    &kp COLON &kp N7  &cht LPAR N8 &kp N9	&kp COMMA     						&kp BSLH	&kp GRAVE	&cht RPAR LT		&kp GT	&kp QMARK	&trans
				&trans &trans 	&trans 	 &trans	&trans	&trans 										&trans 	&trans 	&trans 	&trans 	&trans 	&trans
			>;
    }; 

	// [5] NUMPAD = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
    numpad {
			// --------------------------------------------------------------------------------------------------+
			// |  ____ |   %   |   1   |   2   |   3   |   ^   ||   $   |   #   |   @   |   !   |   :   |   UND  |
			// |   ~   |   0   |   4   |   5   |   6   |   .   ||   *   |   =   |   -   |   +   |   &   |    |   |
			// |  ____ |   :   |   7   |  8(   |   9   |   ,   ||   \   |   `   |   <)  |   >   |   ?   |  ____  |
			// |-------------------------------------------------------------------------------------------------|
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ==================================================================================================+
			bindings = <
				&trans    &kp PRCNT	   &kp KP_N1  &kp KP_N2	 &kp KP_N3  &kp CARET							&kp DLLR	&kp HASH	&kp AT		&kp EXCL	&kp COLON	&kp UNDER
				&kp TILDE &kp KP_N0	   &kp KP_N4  &kp KP_N5	 &hm LCTRL KP_N6 &kp DOT	     				&kp STAR	&hm LCTRL EQUAL	&hm LSHFT KP_MINUS	&hm LGUI KP_PLUS &hm LALT AMPS	&kp PIPE
				&trans    &kp COLON &kp KP_N7  &cht LPAR KP_N8 &kp KP_N9	&kp COMMA     					&kp BSLH	&kp GRAVE	&cht RPAR LT	&kp GT	&kp QMARK	&trans
				&trans &trans 	&trans 	 &trans	&trans	&trans 												&trans 	&trans 	&trans 	&trans 	&trans 	&trans
			>;
    }; 

	// [6] WM = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	wm {
			// TODO:
			//   - list all window manager shortcut keys && assign place
			// --------------------------------------------------------------------------------------------------+
			// |  ____ |  ____ |scrn_l |clnt_up|scrn_r |  ____ ||  ____ | WS_1  | WS_2  | WS_3  | ____  |  ____  |
			// |  ____ |width+ |  ws_l |clnt_dn| ws_r  |width- ||  ____ | WS_4  | WS_5  | WS_6  | ____  |  ____  |
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ | ____  | ____  | ____  | ____  |  ____  |
			// |-------------------------------------------------------------------------------------------------|
			// |  ____ |  ____ |  ____ |  ____ |  ____ |  ____ ||  ____ |  ____ |  ____ |  ____ |  ____ |  ____  |
			// ==================================================================================================+			
			bindings = <
				&trans	&trans		&kp LG(LC(J)) &kp LG(K) &kp LG(LC(K))	  &trans				&trans	&kp WS_1 &kp WS_2 &kp WS_3 &trans &trans
				&trans	&kp LG(H) &kp LG(LEFT) &hm LSHFT LG(J)	&hm LCTRL LG(RIGHT) &kp LG(L)		&trans	&hm LCTRL WS_4 &hm LSHFT WS_5 &kp WS_6 &trans &trans
				&trans	&trans      &trans      &trans		&kp LG(Q)	&trans						&trans	&trans 	&trans  &trans  &trans	&trans
				&trans	&trans		&trans		&trans		&trans		&trans						&trans	&trans	&trans	&trans	&trans	&trans

			>;
	};

	// [7] CONTROL = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	media {
			// TODO:
			//   
			// -------------------------------------------------------------------------------------------+
			// | ____ | F10  |  F1  |  F2  |  F3  | ____ || ____ | B_TOG | B_DN  | B_UP  | ____ |ZOOMIN|
			// | ____ | F11  |  F4  |  F5  |  F6  | ____ || ____ | v_MUTE| V_DN  | v_UP  | ____ |ZOOMOUT|
			// | ____ | F12  |  F7  |  F8  |  F9  | ____ || ____ |lang_sw/|_THAI |  ____ | ____ | ____ |
			// |---------------------------------------------------------------------------------------|
			// | ____ | ____ | ____ | ____ | ____ | ____ || ____ | _____ | _____ | _____ | ____ | tog 4|
			// ========================================================================================+	
		bindings = <
			&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans 		&trans &kp C_BKLT_TOG	&kp C_BRI_DN	&kp C_BRI_UP	&trans 		&kp LC(PLUS)
			&trans 	&kp F11  &kp F4  &kp F5  &kp F6  &trans 		&trans &kp C_MUTE		&kp C_VOL_DN	&kp C_VOL_UP	&trans 		&kp LC(MINUS)
			&trans 	&kp F12  &kp F7  &kp F8  &kp F9  &trans 		&trans &kp RA(SPACE)   &tog THAI		&trans			&trans 	&trans
			&trans 	&trans 	 &trans  &trans  &trans  &trans 		&trans &trans &trans &trans &trans &tog GAME
		>; 
	};
	// [8] CONTROL = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
	control {
			// TODO:
			//   - delet media keys, use this for only bluetooth
			// ----------------------------------------------------------------------------------------+
			// |BOOTLD| ____ | prof1| prof2| prof3| ____ || ____ | B_TOG | B_DN  | B_UP  | ____ |ZOOMIN|
			// |RESET | ____ | prof4| prof5| ____ | ____ || ____ | v_MUTE| V_DN  | v_UP  | ____ |ZOOMOUT|
			// |BT_CLR| ____ | ____ | ____ | ____ | ____ || ____ | M_STOP| M_PRV | M_NXT | M_PP | ____ |
			// |---------------------------------------------------------------------------------------|
			// | ____ | ____ | ____ | ____ | ____ | ____ || ____ | _____ | _____ | _____ | ____ | tog 4|
			// ========================================================================================+	
		bindings = <
			&bootloader &trans 	&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans		&trans &kp C_BKLT_TOG	&kp C_BRI_DN	&kp C_BRI_UP	&trans 		&kp LC(PLUS)
			&reset 	&to DEFAULT &bt BT_SEL 3 &bt BT_SEL 4 &trans 	   &trans 		&trans &kp C_MUTE		&kp C_VOL_DN	&kp C_VOL_UP	&trans 		&kp LC(MINUS)
			&bt BT_CLR	&trans 	&trans 		 &trans 	  &trans 	   &trans 		&trans &kp C_STOP		&kp C_PREV		&kp C_NEXT		&kp C_PP 	&trans
			&trans 		&trans 	&trans 		 &trans 	  &trans       &trans 		&trans &trans &trans &trans &trans &tog GAME
		>; 
	};

  };
};

/*
TODO:
	- move bluetooth to a separate layer (avoid wrong press from frequent layer switching)
	- move F-keys to _CONTR layer on left hand
	- add OSinput switch for Linux
	- assign sticky key for bluetooth and OSinput/lang switch on bottom row
*/
